class Array {
	public static void main(String[] args){
		toHex(60);
		toHex_1(60);
	}
	
	/*
		什么时候使用数组？
		如果数据出现了对应关系，而且对应关系的一方是有序的数字编号，并作为角标使用。
		这时就必须要想到数组的使用。
		
		就可以将这些数据存储到数组中，
		根据运算的结果作为角标直接去查数组中对应的元素即可。
		
		这种方式：称为查表法
		
	*/
	//进制转换
	public static void toHex_2(int num)
	
		if(num == 0){
			System.out.print('0');
			return;
		}
		//首先定义一个对应关系表
		char[] chs = {
			'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'
		};
		//定义一个临时数组
		char[] arr = new char[8];
		int pos = arr.length;
		
		while(num!=0){
			int temp = num & 15;
			arr[--pos] = chs[temp];
			num = num >>> 4;
		}
		for(int x=pos;x<arr.length;x++){
			System.out.print(arr[x]);
		}
	}
	
	
	//进制转换，使用查表法查找
	public static void toHex_1(int num){
	
		//首先定义一个对应关系表
		char[] chs = {
			'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F','G'
		};
		
		for(int i=0;i<8;i++){
			int temp = num & 15;
			System.ot.print(chs[temp]);
			num = num >>> 4;
		}
	
	}
	//输出：c30000
	
	public statci void toHex(int num){
		
		for(int i=0;i<8;i++){
			int temp = num & 15;
			if(temp > 9){
				System.out.print((char)(temp-10+'A'));
			}else{
				System.out.print(temp);
			}
			num = num >>> 4;
		}
	}
	//输出：c30000
}